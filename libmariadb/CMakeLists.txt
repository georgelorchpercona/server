INCLUDE(${CMAKE_SOURCE_DIR}/cmake/mariadb_connector_c.cmake)
 
SET(CONNECTOR_C_INSTALLDIR "${CMAKE_CURRENT_BINARY_DIR}/mariadb-connector-c/${CMAKE_CFG_INTDIR}" CACHE STRING "")
SET(CONNECTOR_C_INSTALL_PREFIX ${CONNECTOR_C_INSTALLDIR})

IF(NOT "${CMAKE_CFG_INTDIR}" STREQUAL "")
  STRING(REPLACE "${CMAKE_CFG_INTDIR}" "\${BUILD_TYPE}" CONNECTOR_C_INSTALL_PREFIX "${CONNECTOR_C_INSTALLDIR}")
ENDIF()

IF(IS_DIRECTORY ${CMAKE_SOURCE_DIR}/mariadb-connector-c)
 # Building from source package
 SET(CONNECTOR_C_SOURCE_DIR  ${CMAKE_SOURCE_DIR}/mariadb-connector-c)
 SET(GIT_PARAMS)
ELSE()
 # Building from git, use git to get Connector/C
 SET(GIT_PARAMS 
  GIT_REPOSITORY "https://github.com/MariaDB/mariadb-connector-c/"
  GIT_TAG "master"
 )
 SET(CONNECTOR_C_SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/mariadb-connector-c-src)
ENDIF()

IF(TARGET zlib)
  SET(CONNECTOR_C_DEPENDENCIES DEPENDS zlib)
  GET_PROPERTY(ZLIB_LIBRARY_LOCATION TARGET zlib PROPERTY LOCATION)
ELSE()
  SET(ZLIB_LIBRARY_LOCATION ${ZLIB_LIBRARY})
ENDIF()


INCLUDE(ExternalProject)
ExternalProject_Add(
  mariadb_connector_c
  ${GIT_PARAMS}
  ${CONNECTOR_C_DEPENDENCIES}
  UPDATE_COMMAND ""
  PATCH_COMMAND ""
  SOURCE_DIR ${CONNECTOR_C_SOURCE_DIR}
  INSTALL_DIR ${CONNECTOR_C_INSTALLDIR}
  CMAKE_ARGS ${CC_CMAKE_OPTS}
  -DCMAKE_INSTALL_PREFIX=${CONNECTOR_C_INSTALL_PREFIX}
  -DWITH_EXTERNAL_ZLIB=1 
  -DZLIB_FOUND=1
  -DZLIB_LIBRARY=${ZLIB_LIBRARY_LOCATION}
  -DZLIB_INCLUDE_DIR=${ZLIB_INCLUDE_DIR}
  -DSKIP_TESTS=1
  -DFOR_SERVER=1
  TEST_COMMAND ""
)

SET(STATIC_LIB_LOCATION "${CONNECTOR_C_INSTALLDIR}/lib/mariadb/${CMAKE_STATIC_LIBRARY_PREFIX}mysqlclient${CMAKE_STATIC_LIBRARY_SUFFIX}")
SET(SHARED_LIB_LOCATION "${CONNECTOR_C_INSTALLDIR}/lib/mariadb/libmysql${CMAKE_SHARED_LIBRARY_SUFFIX}")
IF(WIN32)
  SET(SHARED_LIB_IMPLIB_LOCATION "${CONNECTOR_C_INSTALLDIR}/lib/mariadb/libmysql.lib")
  SET(SHARED_LIB_PDB_LOCATION "${CONNECTOR_C_INSTALLDIR}/lib/mariadb/libmysql.pdb")
ELSE()
  SET(SHARED_LIB_IMPLIB_LOCATION)
  SET(SHARED_LIB_PDB_LOCATION)
ENDIF()

ADD_LIBRARY(mariadbclient STATIC IMPORTED GLOBAL)
SET_TARGET_PROPERTIES(mariadbclient PROPERTIES IMPORTED_LOCATION ${STATIC_LIB_LOCATION})
ADD_DEPENDENCIES(mariadbclient mariadb_connector_c GenError)

ADD_LIBRARY(libmariadb SHARED IMPORTED GLOBAL)
SET_TARGET_PROPERTIES(libmariadb PROPERTIES IMPORTED_LOCATION ${SHARED_LIB_LOCATION})
ADD_DEPENDENCIES(libmariadb mariadb_connector_c GenError)


SET(CONNECTOR_C_LIBS ${STATIC_LIB_LOCATION}  ${CC_LIBS} ${ZLIB_LIBRARY} PARENT_SCOPE)

# For multiconfig generators (Visual Studio and Xcode) 
# CMAKE_CFG_INTDIR  should be transalated into CMAKE_INSTALL_CONFIG_NAME for cpack
FUNCTION(GET_INSTALL_LOCATION LOC VARNAME)
  SET(val ${LOC})
  IF (NOT "${CMAKE_CFG_INTDIR}" STREQUAL "")
    STRING(REPLACE  "${CMAKE_CFG_INTDIR}" "\${CMAKE_INSTALL_CONFIG_NAME}" val ${val})
  ENDIF()
  SET(${VARNAME} ${val} PARENT_SCOPE)
ENDFUNCTION()

# INSTALL Connector/C files

GET_INSTALL_LOCATION(${STATIC_LIB_LOCATION} STATIC_LIB_INSTALL_LOCATION)
INSTALL(FILES ${STATIC_LIB_INSTALL_LOCATION} DESTINATION ${INSTALL_LIBDIR} COMPONENT Development)

FOREACH(f SHARED_LIB SHARED_LIB_IMPLIB SHARED_LIB_PDB)
  GET_INSTALL_LOCATION(${${f}_LOCATION} loc)
  IF(loc)
    INSTALL(FILES ${loc} DESTINATION ${INSTALL_LIBDIR} COMPONENT SharedLibraries)
  ENDIF()
ENDFOREACH()

